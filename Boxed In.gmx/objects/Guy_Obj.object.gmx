<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>Guy</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>541</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_sprite_set</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>5</kind>
            <sprite>Guy</sprite>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>201</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_create_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>10</kind>
            <object>SpriteChanger</object>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>201</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_create_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>10</kind>
            <object>Lives_Draw</object>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.Step1 = 0;
global.Step2 = 0;
hit = 0;
allow = 0;
time1 = 20;//swing
count1 = 0;//swing
time2 = 20;//swing cool
count2 = 0;//swing cool
time3 = 30; //hit
count3 = 0; //hit
Step3 = 0;  //sound
Index3 = 14; //sound
global.Speed = 4;
global.Index1 = 7;
global.Index2 = 0;
if(global.Horz &gt; 0)
{
    hspeed = global.Speed;
}
if(global.Horz &lt; 0)
{
    hspeed = -global.Speed;
}
if(global.Vert &gt; 0)
{
    vspeed = -global.Speed;
}
if(global.Vert &lt; 0)
{
    vspeed = global.Speed;
}
global.Collide = 0;
global.text = 0;
global.Side = 0; // 0 = top, 1 equals right, 2 equals left

audio_play_sound(LevelEnter, 9, false);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.Collide == 0 &amp;&amp; sprite_index == GuyWater)
{
    var image = image_index;
    sprite_index = Guy;
    image_speed = 0;
    global.Speed = 4;
    global.Index1 = 7;
    Guy_Obj.Index3 = 14;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(global.Swing == 1 &amp;&amp; allow == 0 &amp;&amp; global.Weapon == 1)
{
    allow = 1;
    audio_play_sound(SwingSound, 10, false);
}

if(allow == 1 &amp;&amp; count1 &gt;= time1)
{
    allow = 0;
    count1 = 0;
    global.Swing = 0;
}
else
{
    if(allow == 1)
    {
        count1++;
    }
}
if(allow == 1)
{
    count2 = 0;
}
else
{
    count2++;
    if(count2 &gt; (time2 + 5))
    {
        count2 = (time2 + 5);
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(hit == 1)
{
    if(count3 &gt;= time3)
    {
        count3 = 0;
        hit = 0;
    }
    count3++;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.Collide = 0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Key Detection
// A

if(keyboard_check_pressed(ord("A")))
{
    global.Horz = -1;
    if(global.Vert == 0 &amp;&amp; global.Side == 0)
    {
        if(global.IPText == 0)
        {
            image_index = 13;
        }
        global.Index2 = 2;
        global.Step1 = 0;
    }
    else
    {
        switch(global.Side)
        {
            case 1:
            if(global.IPText == 0)
            {
                image_index = 1;
            }
            global.Index2 = 2;
            global.Step1 = 0;
            break;
            case 2:
            if(global.IPText == 0)
            {
                image_index = 5;
            }
            global.Index2 = 2;
            global.Step1 = 0;
            break;
        }
    }
}
if(keyboard_check_released(ord("A")))
{
    if(global.Horz &lt; 0)
    {
        global.Horz = 0;
        global.Step2 = 2;
    }
}

// D

if(keyboard_check_pressed(ord("D")))
{
    global.Horz = 1;
    if(global.Vert == 0 &amp;&amp; global.Side == 0)
    {
        if(global.IPText == 0)
        {
            image_index = 9;
        }
        global.Index2 = 2;
        global.Step1 = 0;
    }
    else
    {
        switch(global.Side)
        {
            case 1:
            if(global.IPText == 0)
            {
                image_index = 5;
            }
            global.Index2 = 2;
            global.Step1 = 0;
            break;
            case 2:
            if(global.IPText == 0)
            {
                image_index = 1;
            }
            global.Index2 = 2;
            global.Step1 = 0;
            break;
        }
    }
}
if(keyboard_check_released(ord("D")))
{
    if(global.Horz &gt; 0)
    {
        global.Horz = 0;
        global.Step2 = 3;
    }
}

// W

if(keyboard_check_pressed(ord("W")))
{
    global.Vert = 1;
    switch(global.Side)
    {
        case 0:
        if(global.IPText == 0)
        {
            image_index = 5;
        }
        global.Index2 = 2;
        global.Step1 = 0;
        break;
        
        case 1:
        if(global.Horz == 0)
        {
            if(global.IPText == 0)
            {
                image_index = 13;
            }
            global.Index2 = 2;
            global.Step1 = 0;
        }
        break;
        
        case 2:
        if(global.Horz == 0)
        {
            if(global.IPText == 0)
            {
                image_index = 9;
            }
            global.Index2 = 2;
            global.Step1 = 0;
        }
        break;
    }
}
if(keyboard_check_released(ord("W")))
{
    if(global.Vert &gt; 0)
    {
        global.Vert = 0;
        global.Step2 = 0;
    }
}

// S

if(keyboard_check_pressed(ord("S")))
{
    global.Vert = -1;
    switch(global.Side)
    {
        case 0:
        if(global.IPText == 0)
        {
            image_index = 1;
        }
        global.Index2 = 2;
        global.Step1 = 0;
        break;
        
        case 1:
        if(global.Horz == 0)
        {
            if(global.IPText == 0)
            {
                image_index = 9;
            }
            global.Index2 = 2;
            global.Step1 = 0;
        }
        break;
        
        case 2:
        if(global.Horz == 0)
        {
            if(global.IPText == 0)
            {
                image_index = 13;
            }
            global.Index2 = 2;
            global.Step1 = 0;
        }
        break;
    }
}
if(keyboard_check_released(ord("S")))
{
    if(global.Vert &lt; 0)
    {
        global.Vert = 0;
        global.Step2 = 1;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Sprite handle
if(global.IPText != 1)
{
if(global.Horz == 0 &amp;&amp; global.Vert == 0)
{
    if(global.Step2 == 0) // W
    {
        switch(global.Side)
        {
            case 0:
            image_index = 4;
            break;
            
            case 1:
            image_index = 12;
            break;
            
            case 2:
            image_index = 8;
            break;
        }
    }
    if(global.Step2 == 1)  // S
    {
        switch(global.Side)
        {
            case 0:
            image_index = 0;
            break;
            
            case 1:
            image_index = 8;
            break;
            
            case 2:
            image_index = 12;
            break;
        }
    }
    if(global.Step2 == 2) // A
    {
        switch(global.Side)
        {
            case 0:
            image_index = 12;
            break;
            
            case 1:
            image_index = 0;
            break;
            
            case 2:
            image_index = 4;
            break;
        }
    }
    if(global.Step2 == 3) // D
    {
        switch(global.Side)
        {
            case 0:
            image_index = 8;
            break;
            
            case 1:
            image_index = 4;
            break;
            
            case 2:
            image_index = 0;
            break;
        }
    }
}
else
{
    if(global.Side == 0) // Begin top
    {
        if(global.Horz != 0 &amp;&amp; global.Vert == 0)
        {
            switch (global.Horz){
                case 1: // D Top
                global.Step1++;
                if (global.Step1 &gt;= global.Index1)
                {
                    if(global.Index2 &lt; 4)
                    {
                        image_index = global.Index2 + 8;
                        global.Index2++;
                    }
                    else
                    {
                        global.Index2 = 1;
                        image_index = global.Index2 + 7;
                    }
                    global.Step1 = 0;
                }
                break;
                
                case -1: // A top
                global.Step1++;
                if (global.Step1 &gt;= global.Index1)
                {
                    if(global.Index2 &lt; 4)
                    {
                        image_index = global.Index2 + 12;
                        global.Index2++;
                    }
                    else
                    {
                        global.Index2 = 1;
                        image_index = global.Index2 + 11;
                    }
                    global.Step1 = 0;
                }
                break;
            }
        }
        else
        {
            switch (global.Vert){
                case 1: // W Top
                global.Step1++;
                if (global.Step1 &gt;= global.Index1)
                {
                    if(global.Index2 &lt; 4)
                    {
                        image_index = global.Index2 + 4;
                        global.Index2++;
                    }
                    else
                    {
                        global.Index2 = 1;
                        image_index = global.Index2 + 3;
                    }
                    global.Step1 = 0;
                }
                break;
                
                case -1: // S Top
                global.Step1++;
                if (global.Step1 &gt;= global.Index1)
                {
                    if(global.Index2 &lt; 4)
                    {
                        image_index = global.Index2;
                        global.Index2++;
                    }
                    else
                    {
                        global.Index2 = 1;
                        image_index = global.Index2 - 1;
                    }
                    global.Step1 = 0;
                }
                break;
            }
        }
    }
    else // begin sides
    {
        if(global.Vert != 0 &amp;&amp; global.Horz == 0)
        {
            switch (global.Vert){
                case 1: // W side
                global.Step1++;
                if (global.Step1 &gt;= global.Index1)
                {
                    if(global.Index2 &lt; 4)
                    {
                        if(global.Side == 1)
                        {
                            image_index = global.Index2 + 12;
                        }
                        else
                        {
                            image_index = global.Index2 + 8;
                        }
                        global.Index2++;
                    }
                    else
                    {
                        global.Index2 = 1;
                        if(global.Side == 1)
                        {
                            image_index = global.Index2 + 11;
                        }
                        else
                        {
                            image_index = global.Index2 + 7;
                        }
                    }
                    global.Step1 = 0;
                }
                break;
                
                case -1: // S side
                global.Step1++;
                if (global.Step1 &gt;= global.Index1)
                {
                    if(global.Index2 &lt; 4)
                    {
                        if(global.Side == 1)
                        {
                            image_index = global.Index2 + 8;
                        }
                        else
                        {
                            image_index = global.Index2 + 12;
                        }
                        global.Index2++;
                    }
                    else
                    {
                        global.Index2 = 1;
                        if(global.Side == 1)
                        {
                            image_index = global.Index2 + 7;
                        }
                        else
                        {
                            image_index = global.Index2 + 11;
                        }
                    }
                    global.Step1 = 0;
                }
                break;
            }
        }
        else
        {
            switch (global.Horz){
                case 1: // D side
                global.Step1++;
                if (global.Step1 &gt;= global.Index1)
                {
                    if(global.Index2 &lt; 4)
                    {
                    if(global.Side == 1)
                        {
                            image_index = global.Index2 + 4;
                        }
                        else
                        {
                            image_index = global.Index2 + 0;
                        }
                        global.Index2++;
                    }
                    else
                    {
                        global.Index2 = 1;
                        if(global.Side == 1)
                        {
                            image_index = global.Index2 + 3;
                        }
                        else
                        {
                            image_index = global.Index2 - 1;
                        }
                    }
                    global.Step1 = 0;
                }
                break;
                
                case -1: // A side
                global.Step1++;
                if (global.Step1 &gt;= global.Index1)
                {
                    if(global.Index2 &lt; 4)
                    {
                        if(global.Side == 1)
                        {
                            image_index = global.Index2 + 0;
                        }
                        else
                        {
                            image_index = global.Index2 + 4;
                        }
                        global.Index2++;
                    }
                    else
                    {
                        global.Index2 = 1;
                        if(global.Side == 1)
                        {
                            image_index = global.Index2 - 1;
                        }
                        else
                        {
                            image_index = global.Index2 + 3;
                        }
                    }
                    global.Step1 = 0;
                }
                break;
            }
        }
    }
}
}

switch(global.Side)
{
    case 0:
    image_angle = 0;
    break;
    
    case 1:
    image_angle = 270;
    break;
    
    case 2:
    image_angle = 90;
    break;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//sound handle
var walk = 0;
if(global.Horz &gt; 0)
{
    walk = 1;
}
if(global.Horz &lt; 0)
{
    walk = 1;
}
if(global.Vert &gt; 0)
{
    walk = 1;
}
if(global.Vert &lt; 0)
{
    walk = 1;
}
if(walk = 1)
{
    Step3++;
}
if(audio_is_playing(MeleeAttack) != true &amp;&amp; walk = 1 &amp;&amp; global.IPText == 0)
{
    if(Step3 &gt; Index3)
    {
        audio_play_sound(itt, 7, false);
        Step3 = 0;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Movement handle
if(global.IPText == 0)
{
if(global.Horz &gt; 0 &amp;&amp; hspeed != global.Speed)
{
    hspeed = global.Speed;
}
else
{
    if(global.Horz &lt; 0 &amp;&amp; hspeed != -global.Speed)
    {
        hspeed = -global.Speed;
    }
}

if(global.Vert &gt; 0 &amp;&amp; vspeed != -global.Speed)
{
    vspeed = -global.Speed;
}
else
{
    if(global.Vert &lt; 0 &amp;&amp; vspeed != global.Speed)
    {
        vspeed = global.Speed;
    }
}

if(global.Horz == 0)
{
    hspeed = 0;
}

if(global.Vert == 0)
{
    vspeed = 0;
}
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>depth = scr_depth(x, y, image_angle, 21);
if(global.Weapon == 1 &amp;&amp; sprite_index == Guy)
{
    var index = image_index;
    sprite_index = GuyAxe;
    image_index = index;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="Left_Obj">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(global.Side != 2)
{
    global.Side = 2;
    global.Step1 = global.Index1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="Right_Obj">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(global.Side != 1)
{
    global.Side = 1;
    global.Step1 = global.Index1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="Top_Obj">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(global.Side != 0)
{
    global.Side = 0;
    global.Step1 = global.Index1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="Wall_Obj">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="Exit_Text">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.Collide = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="Exit">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.Collide = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="AngleNight_Obj">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(global.Swing == 0 &amp;&amp; hit == 0 &amp;&amp; global.Night == 1)
{
    global.Lives = global.Lives - 1;
    hit = 1;
    var rand = irandom(1);
    if(global.Lives &gt; 0)
    {
        switch(rand)
        {
            case 0:
            audio_play_sound(DamageTaken1, 10, false);
            break;
            case 1:
            audio_play_sound(DamageTaken2, 10, false);
            break
        }
    }
    else
    {
        audio_play_sound(Death, 10, false);
        room = GameOverRoom;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="angleDay_Obj">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(global.Swing == 0 &amp;&amp; hit == 0 &amp;&amp; global.Night == 0)
{
    global.Lives = global.Lives - 1;
    hit = 1;
    var rand = irandom(1);
    if(global.Lives &gt; 0)
    {
        switch(rand)
        {
            case 0:
            audio_play_sound(DamageTaken1, 10, false);
            break;
            case 1:
            audio_play_sound(DamageTaken2, 10, false);
            break
        }
    }
    else
    {
        audio_play_sound(Death, 10, false);
        room = GameOverRoom;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="BeamColide">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.Collide = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="BeamNight">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.Collide = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="BeamDayNight">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="BeamDay">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.Collide = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="ParkBench_Obj">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.Collide = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="ParkShop_Obj">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.Collide = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="ParkShopText_Obj">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.Collide = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="Trees_Place">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.Collide = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(count2 &gt;= time2 &amp;&amp; global.Weapon == 1)
{
    global.Swing = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="27">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>room = MainMenue;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(global.Weapon == 1 &amp;&amp; image_index &lt;= 3 &amp;&amp; global.Swing == 1)
{
    if((count1/time1) &lt; 0 &amp;&amp; (count1/time1) &gt; 1)
    {
        draw_self();
    }
    if((count1/time1) &lt; .25 &amp;&amp; (count1/time1) &gt; 0)
    {
        draw_sprite_ext(GuySwingFront, 0, x, y, 1, 1, image_angle, c_white, 1 );
    }
    if((count1/time1) &gt;= .25 &amp;&amp; (count1/time1) &lt; .50)
    {
        draw_sprite_ext(GuySwingFront, 1, x, y, 1, 1, image_angle, c_white, 1 );
    }
    if((count1/time1) &gt;= .5 &amp;&amp; (count1/time1) &lt; .75)
    {
        draw_sprite_ext(GuySwingFront, 2, x, y, 1, 1, image_angle, c_white, 1 );
    }
    if((count1/time1) &gt;= .75 &amp;&amp; (count1/time1) &lt;= 1)
    {
        draw_sprite_ext(GuySwingFront, 3, x, y, 1, 1, image_angle, c_white, 1 );
    }
}

if(global.Weapon == 1 &amp;&amp; image_index &lt;= 11 &amp;&amp; image_index &gt;= 8 &amp;&amp; global.Swing == 1)
{
    if((count1/time1) &lt; 0 &amp;&amp; (count1/time1) &gt; 1)
    {
        draw_self();
    }
    if((count1/time1) &lt; .25 &amp;&amp; (count1/time1) &gt; 0)
    {
        draw_sprite_ext(GuySwingRight, 0, x, y, 1, 1, image_angle, c_white, 1 );
    }
    if((count1/time1) &gt;= .25 &amp;&amp; (count1/time1) &lt; .50)
    {
        draw_sprite_ext(GuySwingRight, 1, x, y, 1, 1, image_angle, c_white, 1 );
    }
    if((count1/time1) &gt;= .5 &amp;&amp; (count1/time1) &lt; .75)
    {
        draw_sprite_ext(GuySwingRight, 2, x, y, 1, 1, image_angle, c_white, 1 );
    }
    if((count1/time1) &gt;= .75 &amp;&amp; (count1/time1) &lt;= 1)
    {
        draw_sprite_ext(GuySwingRight, 3, x, y, 1, 1, image_angle, c_white, 1 );
    }
}

if(global.Weapon == 1 &amp;&amp; image_index &lt;= 15 &amp;&amp; image_index &gt;= 12 &amp;&amp; global.Swing == 1)
{
    if((count1/time1) &lt; 0 &amp;&amp; (count1/time1) &gt; 1)
    {
        draw_self();
    }
    if((count1/time1) &lt; .25 &amp;&amp; (count1/time1) &gt; 0)
    {
        draw_sprite_ext(GuySwingLeft, 0, x, y, 1, 1, image_angle, c_white, 1 );
    }
    if((count1/time1) &gt;= .25 &amp;&amp; (count1/time1) &lt; .50)
    {
        draw_sprite_ext(GuySwingLeft, 1, x, y, 1, 1, image_angle, c_white, 1 );
    }
    if((count1/time1) &gt;= .5 &amp;&amp; (count1/time1) &lt; .75)
    {
        draw_sprite_ext(GuySwingLeft, 2, x, y, 1, 1, image_angle, c_white, 1 );
    }
    if((count1/time1) &gt;= .75 &amp;&amp; (count1/time1) &lt;= 1)
    {
        draw_sprite_ext(GuySwingLeft, 3, x, y, 1, 1, image_angle, c_white, 1 );
    }
}

if(global.Weapon == 1 &amp;&amp; image_index &lt;= 7 &amp;&amp; image_index &gt;= 4 &amp;&amp; global.Swing == 1)
{
    if((count1/time1) &lt; 0 &amp;&amp; (count1/time1) &gt; 1)
    {
        draw_self();
    }
    if((count1/time1) &lt; .25 &amp;&amp; (count1/time1) &gt; 0)
    {
        draw_sprite_ext(GuySwingBack, 0, x, y, 1, 1, image_angle, c_white, 1 );
    }
    if((count1/time1) &gt;= .25 &amp;&amp; (count1/time1) &lt; .50)
    {
        draw_sprite_ext(GuySwingBack, 1, x, y, 1, 1, image_angle, c_white, 1 );
    }
    if((count1/time1) &gt;= .5 &amp;&amp; (count1/time1) &lt; .75)
    {
        draw_sprite_ext(GuySwingBack, 2, x, y, 1, 1, image_angle, c_white, 1 );
    }
    if((count1/time1) &gt;= .75 &amp;&amp; (count1/time1) &lt;= 1)
    {
        draw_sprite_ext(GuySwingBack, 3, x, y, 1, 1, image_angle, c_white, 1 );
    }
}

if(global.Swing == 0)
{
    draw_self();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
